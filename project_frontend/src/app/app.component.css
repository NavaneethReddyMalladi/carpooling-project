/* Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background-color: #f8f9fa;
    color: #1a1a1a;
    line-height: 1.6;
  }
  
  /* Common Button Styles */
  .btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    text-decoration: none;
  }
  
  .btn-primary {
    background: #000000;
    color: white;
  }
  
  .btn-primary:hover:not(:disabled) {
    background: #333333;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }
  
  .btn-primary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
  
  .btn-secondary {
    background: #ffffff;
    color: #000000;
    border: 2px solid #000000;
  }
  
  .btn-secondary:hover {
    background: #000000;
    color: #ffffff;
    transform: translateY(-2px);
  }
  
  .btn-success {
    background: #333;
    color: white;
    border: 2px solid #333;
  }
  
  .btn-success:hover {
    background: #000;
    border-color: #000;
  }
  
  .btn-danger {
    background: white;
    color: #333;
    border: 2px solid #999;
  }
  
  .btn-danger:hover {
    background: #f5f5f5;
    border-color: #666;
  }
  
  /* Common Message Styles */
  .message {
    padding: 1rem 1.5rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
  }
  
  .message.success {
    background: #f0f9ff;
    border: 1px solid #e0f2fe;
    color: #0f172a;
  }
  
  .message.error {
    background: #fff5f5;
    border: 1px solid #fed7d7;
    color: #721c24;
  }
  
  /* Common Form Styles */
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .form-group label {
    font-weight: 600;
    color: #1a1a1a;
    font-size: 0.95rem;
  }
  
  .form-control {
    padding: 0.75rem;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    background: white;
  }
  
  .form-control:focus {
    outline: none;
    border-color: #000000;
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
  }
  
  .form-control:invalid {
    border-color: #dc3545;
  }
  
  /* Common Section Headers */
  .section-header {
    margin-bottom: 2rem;
  }
  
  .section-header h2 {
    font-size: 1.75rem;
    color: #1a1a1a;
    margin-bottom: 0.5rem;
    font-weight: 700;
  }
  
  .section-header p {
    color: #666666;
    font-size: 1rem;
  }
  
  /* Common Badge Styles */
  .badge {
    background: #666;
    color: white;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: bold;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 20px;
    height: 20px;
  }
  
  /* Common Empty State */
  .empty-state {
    text-align: center;
    padding: 3rem 1rem;
  }
  
  .empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
    color: #666666;
  }
  
  .empty-state h3 {
    color: #1a1a1a;
    margin-bottom: 0.5rem;
    font-size: 1.25rem;
    font-weight: 600;
  }
  
  .empty-state p {
    color: #666666;
    margin-bottom: 1.5rem;
  }
  
  /* Common Spinner */
  .spinner {
    width: 16px;
    height: 16px;
    border: 2px solid #ffffff;
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  /* Common Animation Classes */
  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .slide-in {
    animation: slideIn 0.3s ease-out;
  }
  
  @keyframes slideIn {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
  }